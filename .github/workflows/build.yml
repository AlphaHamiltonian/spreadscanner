name: Build and Release ExchangeMonitor
on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
# Add this permissions block
permissions:
  contents: write    
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: Linux
            python-version: '3.10'
          - os: macos-latest
            platform: macOS
            python-version: '3.10'
          - os: windows-latest
            platform: Windows
            python-version: '3.10'
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          
      # Install Rust (needed for orjson)
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
          
      - name: Install system dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-tk ccache build-essential
          
      - name: Install system dependencies (macOS)
        if: runner.os == 'macOS'
        run: brew install ccache

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          # Install Rust-related build tools for orjson
          pip install setuptools-rust
          # Install orjson explicitly before other packages
          pip install orjson --verbose
          # Install remaining dependencies
          pip install nuitka websocket-client requests ordered-set
          # Verify orjson installed correctly
          python -c "import orjson; print('orjson installed successfully')"

      - name: Compile with Nuitka (Windows)
        if: matrix.platform == 'Windows'
        run: python -m nuitka --onefile --enable-plugin=tk-inter --disable-ccache --jobs=1 --assume-yes-for-downloads allmonitor.py
        shell: pwsh
        
      - name: Compile with Nuitka (Linux / macOS)
        if: matrix.platform != 'Windows'
        run: python -m nuitka --onefile --enable-plugin=tk-inter --jobs=2 allmonitor.py
        shell: bash
        
      - name: Rename output (Windows)
        if: matrix.platform == 'Windows'
        run: Rename-Item allmonitor.exe ExchangeMonitor-Windows.exe
        shell: pwsh
        
      - name: Rename output (Linux)
        if: matrix.platform == 'Linux'
        run: mv allmonitor.bin ExchangeMonitor-Linux
        
      - name: Rename output (macOS)
        if: matrix.platform == 'macOS'
        run: mv allmonitor.bin ExchangeMonitor-macOS
        
      - name: Upload artifact (Windows)
        if: matrix.platform == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: ExchangeMonitor-Windows
          path: ExchangeMonitor-Windows.exe
          
      - name: Upload artifact (Linux)
        if: matrix.platform == 'Linux'
        uses: actions/upload-artifact@v4
        with:
          name: ExchangeMonitor-Linux
          path: ExchangeMonitor-Linux
          
      - name: Upload artifact (macOS)
        if: matrix.platform == 'macOS'
        uses: actions/upload-artifact@v4
        with:
          name: ExchangeMonitor-macOS
          path: ExchangeMonitor-macOS
          
  release:
    # Add permissions here too for clarity
    permissions:
      contents: write  
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: ExchangeMonitor-Windows
          path: .
          
      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: ExchangeMonitor-Linux
          path: .
          
      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: ExchangeMonitor-macOS
          path: .
          
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ExchangeMonitor-Windows.exe
            ExchangeMonitor-Linux
            ExchangeMonitor-macOS
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}